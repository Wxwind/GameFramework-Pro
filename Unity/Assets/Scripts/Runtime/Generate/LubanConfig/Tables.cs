
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;

namespace Game.Config
{
public partial class Tables
{
    public StarForce.TbAircraft TbAircraft { private set; get; }
    public StarForce.TbArmor TbArmor { private set; get; }
    public StarForce.TbAsteroid TbAsteroid { private set; get; }
    public StarForce.TbEntity TbEntity { private set; get; }
    public StarForce.TbMusic TbMusic { private set; get; }
    public StarForce.TbScene TbScene { private set; get; }
    public StarForce.TbSound TbSound { private set; get; }
    public StarForce.TbThruster TbThruster { private set; get; }
    public StarForce.TbUIForm TbUIForm { private set; get; }
    public StarForce.TbUISound TbUISound { private set; get; }
    public StarForce.TbWeapon TbWeapon { private set; get; }
    private System.Collections.Generic.Dictionary<string, IDataTable> _tables;
    public System.Collections.Generic.IEnumerable<IDataTable> DataTables => _tables.Values;
    public IDataTable GetDataTable(string tableName) => _tables.TryGetValue(tableName, out var v) ? v : null;

    public async Cysharp.Threading.Tasks.UniTask LoadAsync(System.Func<string, Cysharp.Threading.Tasks.UniTask<JSONNode>> loader)
    {
        _tables = new System.Collections.Generic.Dictionary<string, IDataTable>();
        var loadTasks = new System.Collections.Generic.List<Cysharp.Threading.Tasks.UniTask>();

        TbAircraft = new StarForce.TbAircraft(() => loader("starforce_tbaircraft"));
        loadTasks.Add(TbAircraft.LoadAsync());
        _tables.Add("StarForce.TbAircraft", TbAircraft);
        TbArmor = new StarForce.TbArmor(() => loader("starforce_tbarmor"));
        loadTasks.Add(TbArmor.LoadAsync());
        _tables.Add("StarForce.TbArmor", TbArmor);
        TbAsteroid = new StarForce.TbAsteroid(() => loader("starforce_tbasteroid"));
        loadTasks.Add(TbAsteroid.LoadAsync());
        _tables.Add("StarForce.TbAsteroid", TbAsteroid);
        TbEntity = new StarForce.TbEntity(() => loader("starforce_tbentity"));
        loadTasks.Add(TbEntity.LoadAsync());
        _tables.Add("StarForce.TbEntity", TbEntity);
        TbMusic = new StarForce.TbMusic(() => loader("starforce_tbmusic"));
        loadTasks.Add(TbMusic.LoadAsync());
        _tables.Add("StarForce.TbMusic", TbMusic);
        TbScene = new StarForce.TbScene(() => loader("starforce_tbscene"));
        loadTasks.Add(TbScene.LoadAsync());
        _tables.Add("StarForce.TbScene", TbScene);
        TbSound = new StarForce.TbSound(() => loader("starforce_tbsound"));
        loadTasks.Add(TbSound.LoadAsync());
        _tables.Add("StarForce.TbSound", TbSound);
        TbThruster = new StarForce.TbThruster(() => loader("starforce_tbthruster"));
        loadTasks.Add(TbThruster.LoadAsync());
        _tables.Add("StarForce.TbThruster", TbThruster);
        TbUIForm = new StarForce.TbUIForm(() => loader("starforce_tbuiform"));
        loadTasks.Add(TbUIForm.LoadAsync());
        _tables.Add("StarForce.TbUIForm", TbUIForm);
        TbUISound = new StarForce.TbUISound(() => loader("starforce_tbuisound"));
        loadTasks.Add(TbUISound.LoadAsync());
        _tables.Add("StarForce.TbUISound", TbUISound);
        TbWeapon = new StarForce.TbWeapon(() => loader("starforce_tbweapon"));
        loadTasks.Add(TbWeapon.LoadAsync());
        _tables.Add("StarForce.TbWeapon", TbWeapon);

        await Cysharp.Threading.Tasks.UniTask.WhenAll(loadTasks);

        Refresh();
    }

    private void ResolveRef()
    {
        TbAircraft.ResolveRef(this);
        TbArmor.ResolveRef(this);
        TbAsteroid.ResolveRef(this);
        TbEntity.ResolveRef(this);
        TbMusic.ResolveRef(this);
        TbScene.ResolveRef(this);
        TbSound.ResolveRef(this);
        TbThruster.ResolveRef(this);
        TbUIForm.ResolveRef(this);
        TbUISound.ResolveRef(this);
        TbWeapon.ResolveRef(this);
    }

    public void Refresh()
    {
        PostInit();
        ResolveRef();
    }

    partial void PostInit();
}
}
