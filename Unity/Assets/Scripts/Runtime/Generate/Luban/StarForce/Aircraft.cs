
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;

namespace Game.Config.StarForce
{
public sealed partial class Aircraft : Luban.BeanBase
{
    public Aircraft(JSONNode _buf) 
    {
        { if(!_buf["Id"].IsNumber) { throw new SerializationException(); }  Id = _buf["Id"]; }
        { if(!_buf["ThrusterId"].IsNumber) { throw new SerializationException(); }  ThrusterId = _buf["ThrusterId"]; }
        { if(!_buf["WeaponId0"].IsNumber) { throw new SerializationException(); }  WeaponId0 = _buf["WeaponId0"]; }
        { if(!_buf["WeaponId1"].IsNumber) { throw new SerializationException(); }  WeaponId1 = _buf["WeaponId1"]; }
        { if(!_buf["WeaponId2"].IsNumber) { throw new SerializationException(); }  WeaponId2 = _buf["WeaponId2"]; }
        { if(!_buf["ArmorId0"].IsNumber) { throw new SerializationException(); }  ArmorId0 = _buf["ArmorId0"]; }
        { if(!_buf["ArmorId1"].IsNumber) { throw new SerializationException(); }  ArmorId1 = _buf["ArmorId1"]; }
        { if(!_buf["ArmorId2"].IsNumber) { throw new SerializationException(); }  ArmorId2 = _buf["ArmorId2"]; }
        { if(!_buf["DeadEffectId"].IsNumber) { throw new SerializationException(); }  DeadEffectId = _buf["DeadEffectId"]; }
        { if(!_buf["DeadSoundId"].IsNumber) { throw new SerializationException(); }  DeadSoundId = _buf["DeadSoundId"]; }
        { if(!_buf["Name"].IsString) { throw new SerializationException(); }  Name = _buf["Name"]; }
        PostInit();
    }

    public static Aircraft DeserializeAircraft(JSONNode _buf)
    {
        return new StarForce.Aircraft(_buf);
    }

    /// <summary>
    /// 战机编号
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 推进器编号
    /// </summary>
    public readonly int ThrusterId;
    /// <summary>
    /// 武器编号0
    /// </summary>
    public readonly int WeaponId0;
    /// <summary>
    /// 武器编号1
    /// </summary>
    public readonly int WeaponId1;
    /// <summary>
    /// 武器编号2
    /// </summary>
    public readonly int WeaponId2;
    /// <summary>
    /// 装甲编号0
    /// </summary>
    public readonly int ArmorId0;
    /// <summary>
    /// 装甲编号1
    /// </summary>
    public readonly int ArmorId1;
    /// <summary>
    /// 装甲编号2
    /// </summary>
    public readonly int ArmorId2;
    /// <summary>
    /// 死亡特效编号
    /// </summary>
    public readonly int DeadEffectId;
    /// <summary>
    /// 死亡声音编号
    /// </summary>
    public readonly int DeadSoundId;
    /// <summary>
    /// 名字(测试本地化用)
    /// </summary>
    public readonly string Name;
    public const int __ID__ = -749592085;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "ThrusterId:" + ThrusterId + ","
        + "WeaponId0:" + WeaponId0 + ","
        + "WeaponId1:" + WeaponId1 + ","
        + "WeaponId2:" + WeaponId2 + ","
        + "ArmorId0:" + ArmorId0 + ","
        + "ArmorId1:" + ArmorId1 + ","
        + "ArmorId2:" + ArmorId2 + ","
        + "DeadEffectId:" + DeadEffectId + ","
        + "DeadSoundId:" + DeadSoundId + ","
        + "Name:" + Name + ","
        + "}";
    }

    partial void PostInit();
}
}
